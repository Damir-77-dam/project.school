// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Personal.App.Database.Context;

#nullable disable

namespace Personal.App.Migrations
{
    [DbContext(typeof(PersonalDbContext))]
    partial class PersonalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Personal.App.Database.Entities.CheckinEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<string>("Eventtime")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Eventtime");

                    b.Property<int>("OfficeID")
                        .HasColumnType("int")
                        .HasColumnName("OfficeID");

                    b.Property<string>("TypeEvent")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TypeID");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("OfficeID");

                    b.ToTable("CheckinsEntity", (string)null);
                });

            modelBuilder.Entity("Personal.App.Database.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int")
                        .HasColumnName("OfficeId");

                    b.Property<int>("ProfessionId")
                        .HasColumnType("int")
                        .HasColumnName("ProfessionId");

                    b.Property<string>("Serename")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Serename");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.HasIndex("ProfessionId");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("Personal.App.Database.Entities.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("City");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Country");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MobileNumber");

                    b.Property<string>("PostIndex")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("PostIndex");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Street");

                    b.HasKey("Id");

                    b.ToTable("Offices", (string)null);
                });

            modelBuilder.Entity("Personal.App.Database.Entities.Ppofeshional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoriPos")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CategoriPos");

                    b.Property<string>("DescribtionPos")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("DescribtionPos");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Position");

                    b.HasKey("Id");

                    b.ToTable("Profeshionals", (string)null);
                });

            modelBuilder.Entity("Personal.App.Database.Entities.CheckinEntity", b =>
                {
                    b.HasOne("Personal.App.Database.Entities.Employee", "Employee")
                        .WithMany("Checkins")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Personal.App.Database.Entities.Office", "Office")
                        .WithMany("Checkins")
                        .HasForeignKey("OfficeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Office");
                });

            modelBuilder.Entity("Personal.App.Database.Entities.Employee", b =>
                {
                    b.HasOne("Personal.App.Database.Entities.Office", "Office")
                        .WithMany("Employees")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Personal.App.Database.Entities.Ppofeshional", "Profession")
                        .WithMany("Employees")
                        .HasForeignKey("ProfessionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Office");

                    b.Navigation("Profession");
                });

            modelBuilder.Entity("Personal.App.Database.Entities.Employee", b =>
                {
                    b.Navigation("Checkins");
                });

            modelBuilder.Entity("Personal.App.Database.Entities.Office", b =>
                {
                    b.Navigation("Checkins");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Personal.App.Database.Entities.Ppofeshional", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
